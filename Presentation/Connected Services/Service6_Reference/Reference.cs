//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Presentation.Service6_Reference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service_TypeDTO", Namespace="http://schemas.datacontract.org/2004/07/CommunicationApp")]
    [System.SerializableAttribute()]
    public partial class Service_TypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Service_TypeList", Namespace="http://schemas.datacontract.org/2004/07/CommunicationApp")]
    [System.SerializableAttribute()]
    public partial class Service_TypeList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Presentation.Service6_Reference.Service_TypeDTO[] listsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Presentation.Service6_Reference.Service_TypeDTO[] lists {
            get {
                return this.listsField;
            }
            set {
                if ((object.ReferenceEquals(this.listsField, value) != true)) {
                    this.listsField = value;
                    this.RaisePropertyChanged("lists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service6_Reference.IService6")]
    public interface IService6 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/GetService_TypeId", ReplyAction="http://tempuri.org/IService6/GetService_TypeIdResponse")]
        Presentation.Service6_Reference.Service_TypeDTO GetService_TypeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/GetService_TypeId", ReplyAction="http://tempuri.org/IService6/GetService_TypeIdResponse")]
        System.Threading.Tasks.Task<Presentation.Service6_Reference.Service_TypeDTO> GetService_TypeIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/InsertService_Type", ReplyAction="http://tempuri.org/IService6/InsertService_TypeResponse")]
        void InsertService_Type(Presentation.Service6_Reference.Service_TypeDTO service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/InsertService_Type", ReplyAction="http://tempuri.org/IService6/InsertService_TypeResponse")]
        System.Threading.Tasks.Task InsertService_TypeAsync(Presentation.Service6_Reference.Service_TypeDTO service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/DeleteService_Type", ReplyAction="http://tempuri.org/IService6/DeleteService_TypeResponse")]
        void DeleteService_Type(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/DeleteService_Type", ReplyAction="http://tempuri.org/IService6/DeleteService_TypeResponse")]
        System.Threading.Tasks.Task DeleteService_TypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/ModifyService_Type", ReplyAction="http://tempuri.org/IService6/ModifyService_TypeResponse")]
        void ModifyService_Type(Presentation.Service6_Reference.Service_TypeDTO service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/ModifyService_Type", ReplyAction="http://tempuri.org/IService6/ModifyService_TypeResponse")]
        System.Threading.Tasks.Task ModifyService_TypeAsync(Presentation.Service6_Reference.Service_TypeDTO service);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/GetAllService_Type", ReplyAction="http://tempuri.org/IService6/GetAllService_TypeResponse")]
        Presentation.Service6_Reference.Service_TypeList GetAllService_Type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService6/GetAllService_Type", ReplyAction="http://tempuri.org/IService6/GetAllService_TypeResponse")]
        System.Threading.Tasks.Task<Presentation.Service6_Reference.Service_TypeList> GetAllService_TypeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService6Channel : Presentation.Service6_Reference.IService6, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service6Client : System.ServiceModel.ClientBase<Presentation.Service6_Reference.IService6>, Presentation.Service6_Reference.IService6 {
        
        public Service6Client() {
        }
        
        public Service6Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service6Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service6Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service6Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Presentation.Service6_Reference.Service_TypeDTO GetService_TypeId(int id) {
            return base.Channel.GetService_TypeId(id);
        }
        
        public System.Threading.Tasks.Task<Presentation.Service6_Reference.Service_TypeDTO> GetService_TypeIdAsync(int id) {
            return base.Channel.GetService_TypeIdAsync(id);
        }
        
        public void InsertService_Type(Presentation.Service6_Reference.Service_TypeDTO service) {
            base.Channel.InsertService_Type(service);
        }
        
        public System.Threading.Tasks.Task InsertService_TypeAsync(Presentation.Service6_Reference.Service_TypeDTO service) {
            return base.Channel.InsertService_TypeAsync(service);
        }
        
        public void DeleteService_Type(int id) {
            base.Channel.DeleteService_Type(id);
        }
        
        public System.Threading.Tasks.Task DeleteService_TypeAsync(int id) {
            return base.Channel.DeleteService_TypeAsync(id);
        }
        
        public void ModifyService_Type(Presentation.Service6_Reference.Service_TypeDTO service) {
            base.Channel.ModifyService_Type(service);
        }
        
        public System.Threading.Tasks.Task ModifyService_TypeAsync(Presentation.Service6_Reference.Service_TypeDTO service) {
            return base.Channel.ModifyService_TypeAsync(service);
        }
        
        public Presentation.Service6_Reference.Service_TypeList GetAllService_Type() {
            return base.Channel.GetAllService_Type();
        }
        
        public System.Threading.Tasks.Task<Presentation.Service6_Reference.Service_TypeList> GetAllService_TypeAsync() {
            return base.Channel.GetAllService_TypeAsync();
        }
    }
}

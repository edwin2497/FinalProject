//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Presentation.Service4_Reference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicle_TypeDTO", Namespace="http://schemas.datacontract.org/2004/07/CommunicationApp")]
    [System.SerializableAttribute()]
    public partial class Vehicle_TypeDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicle_TypeList", Namespace="http://schemas.datacontract.org/2004/07/CommunicationApp")]
    [System.SerializableAttribute()]
    public partial class Vehicle_TypeList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Presentation.Service4_Reference.Vehicle_TypeDTO[] listsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Presentation.Service4_Reference.Vehicle_TypeDTO[] lists {
            get {
                return this.listsField;
            }
            set {
                if ((object.ReferenceEquals(this.listsField, value) != true)) {
                    this.listsField = value;
                    this.RaisePropertyChanged("lists");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service4_Reference.IService4")]
    public interface IService4 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/GetVehicle_TypeId", ReplyAction="http://tempuri.org/IService4/GetVehicle_TypeIdResponse")]
        Presentation.Service4_Reference.Vehicle_TypeDTO GetVehicle_TypeId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/GetVehicle_TypeId", ReplyAction="http://tempuri.org/IService4/GetVehicle_TypeIdResponse")]
        System.Threading.Tasks.Task<Presentation.Service4_Reference.Vehicle_TypeDTO> GetVehicle_TypeIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/InsertVehicle_Type", ReplyAction="http://tempuri.org/IService4/InsertVehicle_TypeResponse")]
        void InsertVehicle_Type(Presentation.Service4_Reference.Vehicle_TypeDTO vehicleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/InsertVehicle_Type", ReplyAction="http://tempuri.org/IService4/InsertVehicle_TypeResponse")]
        System.Threading.Tasks.Task InsertVehicle_TypeAsync(Presentation.Service4_Reference.Vehicle_TypeDTO vehicleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/DeleteVehicle_Type", ReplyAction="http://tempuri.org/IService4/DeleteVehicle_TypeResponse")]
        void DeleteVehicle_Type(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/DeleteVehicle_Type", ReplyAction="http://tempuri.org/IService4/DeleteVehicle_TypeResponse")]
        System.Threading.Tasks.Task DeleteVehicle_TypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/ModifyVehicle_Type", ReplyAction="http://tempuri.org/IService4/ModifyVehicle_TypeResponse")]
        void ModifyVehicle_Type(Presentation.Service4_Reference.Vehicle_TypeDTO vehicleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/ModifyVehicle_Type", ReplyAction="http://tempuri.org/IService4/ModifyVehicle_TypeResponse")]
        System.Threading.Tasks.Task ModifyVehicle_TypeAsync(Presentation.Service4_Reference.Vehicle_TypeDTO vehicleType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/GetAllVehicle_Type", ReplyAction="http://tempuri.org/IService4/GetAllVehicle_TypeResponse")]
        Presentation.Service4_Reference.Vehicle_TypeList GetAllVehicle_Type();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService4/GetAllVehicle_Type", ReplyAction="http://tempuri.org/IService4/GetAllVehicle_TypeResponse")]
        System.Threading.Tasks.Task<Presentation.Service4_Reference.Vehicle_TypeList> GetAllVehicle_TypeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService4Channel : Presentation.Service4_Reference.IService4, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service4Client : System.ServiceModel.ClientBase<Presentation.Service4_Reference.IService4>, Presentation.Service4_Reference.IService4 {
        
        public Service4Client() {
        }
        
        public Service4Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service4Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service4Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service4Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Presentation.Service4_Reference.Vehicle_TypeDTO GetVehicle_TypeId(int id) {
            return base.Channel.GetVehicle_TypeId(id);
        }
        
        public System.Threading.Tasks.Task<Presentation.Service4_Reference.Vehicle_TypeDTO> GetVehicle_TypeIdAsync(int id) {
            return base.Channel.GetVehicle_TypeIdAsync(id);
        }
        
        public void InsertVehicle_Type(Presentation.Service4_Reference.Vehicle_TypeDTO vehicleType) {
            base.Channel.InsertVehicle_Type(vehicleType);
        }
        
        public System.Threading.Tasks.Task InsertVehicle_TypeAsync(Presentation.Service4_Reference.Vehicle_TypeDTO vehicleType) {
            return base.Channel.InsertVehicle_TypeAsync(vehicleType);
        }
        
        public void DeleteVehicle_Type(int id) {
            base.Channel.DeleteVehicle_Type(id);
        }
        
        public System.Threading.Tasks.Task DeleteVehicle_TypeAsync(int id) {
            return base.Channel.DeleteVehicle_TypeAsync(id);
        }
        
        public void ModifyVehicle_Type(Presentation.Service4_Reference.Vehicle_TypeDTO vehicleType) {
            base.Channel.ModifyVehicle_Type(vehicleType);
        }
        
        public System.Threading.Tasks.Task ModifyVehicle_TypeAsync(Presentation.Service4_Reference.Vehicle_TypeDTO vehicleType) {
            return base.Channel.ModifyVehicle_TypeAsync(vehicleType);
        }
        
        public Presentation.Service4_Reference.Vehicle_TypeList GetAllVehicle_Type() {
            return base.Channel.GetAllVehicle_Type();
        }
        
        public System.Threading.Tasks.Task<Presentation.Service4_Reference.Vehicle_TypeList> GetAllVehicle_TypeAsync() {
            return base.Channel.GetAllVehicle_TypeAsync();
        }
    }
}
